#!/bin/bash

set -xeuo pipefail

WORKDIR=$(pwd)
PLANNERDIR=$(dirname "$0")

export PATH=${PLANNERDIR}:${PATH}

if [ -f sleepFile ]
then
  rm sleepFile
fi
if [ -f orig-1Dom.gdl ]
then
  rm orig-1Dom.gdl
fi
if [ -f abstract0-1Dom.gdl ]
then
  rm abstract0-1Dom.gdl
fi
if [ -f orig-1Prob.gdl ]
then
  rm orig-1Prob.gdl
fi
if [ -f abstract0-1Prob.gdl ]
then
  rm abstract0-1Prob.gdl
fi
if [ -f orig-1Part.gdl ]
then
  rm orig-1Part.gdl
fi
if [ -f abstract0-1Part.gdl ]
then
  rm abstract0-1Part.gdl
fi
noPDBs=0
while [ 1 ]
do
  if [ -f "abstract0-1PDB_"$noPDBs ]
  then
    rm "abstract0-1PDB_"$noPDBs
    ((noPDBs += 1))
  else
    break
  fi
done

DOMAIN=$1
PROBLEM=$2
PLANFILE=$3

# We copy the input files since the grounding tool modifies them in-place.
mkdir tmp
cp "$DOMAIN" tmp/domain.pddl
cp "$PROBLEM" tmp/problem.pddl
cd tmp
sed -i "s/).*-.*number/)/" domain.pddl
"$PLANNERDIR"/ground domain.pddl problem.pddl
sed -i "s/.*total-cost.*//g" problem.pddl
cp domain.pddl ../orig-1Dom.gdl
cp domain.pddl ../abstract0-1Dom.gdl
cp problem.pddl ../orig-1Prob.gdl
cp problem.pddl ../abstract0-1Prob.gdl
cp problem.psas ../orig-1Part.gdl
cp problem.psas ../abstract0-1Part.gdl
cd ../

PLANNER_CALL="java -classpath ${PLANNERDIR}/gamer.jar:${PLANNERDIR}/javabdd-2.0.jar -Djava.library.path=${PLANNERDIR} -Dbdd=cudd pddl2bdd.PDDL2BDD"
(ulimit -t 900 && ${PLANNER_CALL} abstract0-1Dom.gdl abstract0-1Prob.gdl abstract0-1Part.gdl cudd)
echo "done waiting!"
time ${PLANNER_CALL} orig-1Dom.gdl orig-1Prob.gdl orig-1Part.gdl cudd

mv plan_output "$PLANFILE"
